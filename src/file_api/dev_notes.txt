This directory contains all the file processing related classes and APIs

* file_api: provides the interfaces for file processing, used by service
inspectors such as HTTP, SMTP, POP, IMAP, SMB, and FTP etc.

* File capture: provides the ability to capture file data and save them in the
mempool, then they can be stored to disk. Currently, files can be saved to the 
logging folder. Writing to disk is done by a separate thread that will not block
packet thread. When a file is available to store, it will be put into a queue.
The writer thread will read from this queue to write to disk. In the multiple 
packet thread case, many threads will write into this queue and one writer thread
serves all of them. Thread synchronization is done by mutex and conditional
variables for the queue. In the future, we will add support for multiple writer
threads to improve performance when multiple disks are used.

* File libraries: provides file type identification and file signature
calculation

* file_id: file rules must contain `file_meta` and at least one fast-pattern option.
