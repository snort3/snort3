#ifndef __CONFIG_H__
#define __CONFIG_H__


/*****************************************************************************/
/**                                                                         **/
/** If you want to change any of these options, go to your build directory, **/
/** and type `ccmake ${PATH_TO_SOURCE}`".  Change your options in the GUI.  **/
/** Make sure to compile and regenerate the Makefiles when you are done by  **/
/** either exiting the GUI by typing `c` following by `g`, or by typing     **/
/** `cmake ${PATH_TO_SOURCE}` from your build directory.                    **/  
/**                                                                         **/
/*****************************************************************************/

/* General Snort++ Information */

/* Name of package */
#define PACKAGE @PROJECT_NAME@

/* Version number of package */
#define VERSION "@VERSION@"

/* see configure.ac for the purpose of API_OPTIONS */
/* there is no cmake magic yet to configure this */
/* but luckily it is not yet needed */
#define API_OPTIONS ""

/*  User configured options */

/* include internal inspectors in binary */
#cmakedefine STATIC_INSPECTORS 1

/* include internal loggers in binary */
#cmakedefine STATIC_LOGGERS 1

/* include internal ips actions in binary */
#cmakedefine STATIC_IPS_ACTIONS 1

/* include internal ips options in binary */
#cmakedefine STATIC_IPS_OPTIONS 1

/* include internal inspectors in binary */
#cmakedefine STATIC_SEARCH_ENGINES 1

/* include internal decoders in binary */
#cmakedefine STATIC_CODECS 1

/* enalbe debug messages */
#cmakedefine DEBUG_MSGS 1

/* enable debug build */
#cmakedefine DEBUG 1

/* disable assertions */
#cmakedefine NDEBUG 1

/* enable profiling */
#cmakedefine PROFILE 1

/* do not generate a core file on segfault etc */
#cmakedefine NOCOREFILE 1

/* enable ha capable build */
#cmakedefine ENABLE_HA 1

/* enable intel cpm support in build */
#cmakedefine INTEL_SOFT_CPM 1

/* enable unit tests in build */
#cmakedefine UNIT_TEST 1

/* enable piglet in build */
#cmakedefine PIGLET 1

/* Set by user */
#cmakedefine SIGNAL_SNORT_DUMP_STATS @SIGNAL_SNORT_DUMP_STATS@

/* Set by user */
#cmakedefine SIGNAL_SNORT_READ_ATTR_TBL @SIGNAL_SNORT_READ_ATTR_TBL@

/* Set by user */
#cmakedefine SIGNAL_SNORT_RELOAD @SIGNAL_SNORT_RELOAD@

/* Set by user */
#cmakedefine SIGNAL_SNORT_ROTATE_STATS @SIGNAL_SNORT_ROTATE_STATS@

/* enable ha capable build */
#cmakedefine SHELL 1

/* large pcap options */
#cmakedefine _LARGEFILE_SOURCE 1
#cmakedefine _FILE_OFFSET_BITS @_FILE_OFFSET_BITS@

/* enable ha capable build */
#cmakedefine USE_TSC_CLOCK 1


/*  Print available system types and their sizes */

/* Define to 1 if the system has the type `int16_t'. */
#cmakedefine HAVE_INT16_T 1

/* Define to 1 if the system has the type `int32_t'. */
#cmakedefine HAVE_INT32_T 1

/* Define to 1 if the system has the type `int64_t'. */
#cmakedefine HAVE_INT64_T 1

/* Define to 1 if the system has the type `int8_t'. */
#cmakedefine HAVE_INT8_T 1

/* Define to 1 if the system has the type `uint16_t'. */
#cmakedefine HAVE_UINT16_T 1

/* Define to 1 if the system has the type `uint32_t'. */
#cmakedefine HAVE_UINT32_T 1

/* Define to 1 if the system has the type `uint64_t'. */
#cmakedefine HAVE_UINT64_T 1

/* Define to 1 if the system has the type `uint8_t'. */
#cmakedefine HAVE_UINT8_T 1

/* The size of `char', as computed by sizeof. */
#cmakedefine SIZEOF_CHAR @SIZEOF_CHAR@

/* The size of `int', as computed by sizeof. */
#cmakedefine SIZEOF_INT @SIZEOF_INT@

/* The size of `long int', as computed by sizeof. */
#cmakedefine SIZEOF_LONG_INT @SIZEOF_LONG_INT@

/* The size of `long long int', as computed by sizeof. */
#cmakedefine SIZEOF_LONG_LONG_INT @SIZEOF_LONG_LONG_INT@

/* The size of `short', as computed by sizeof. */
#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@

/* The size of `unsigned int', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_INT @SIZEOF_UNSIGNED_INT@

/* The size of `unsigned long int', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_LONG_INT @SIZEOF_UNSIGNED_LONG_INT@

/* The size of `unsigned long long int', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_LONG_LONG_INT @SIZEOF_UNSIGNED_LONG_LONG_INT@

/* Define to `unsigned int' if uid_t is undefined in the system */
#cmakedefine uid_t unsigned int

/* Define to `unsigned int' if pid_t is undefined in the system */
#cmakedefine pid_t unsigned int

/* Define to `unsigned int' if size_t is undefined in the system */
#cmakedefine size_t unsigned int

/* Define to `unsigned int' if ssize_t is undefined in the system */
#cmakedefine ssize_t int

/* Define to `int' if mode_t is undefined in the system */
#cmakedefine mode_t int

/* Define if words are big endian */
#cmakedefine WORDS_BIGENDIAN 1


/*  Header file definitions */

/* Define to 1 if you have the <arpa/inet.h> header file. */
#cmakedefine HAVE_ARPA_INET_H 1

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H 1

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H 1

/* Define to 1 if you have the <libintl.h> header file. */
#cmakedefine HAVE_LIBINTL_H 1

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H 1

/* Define to 1 if you have the <malloc.h> header file. */
#cmakedefine HAVE_MALLOC_H 1

/* Define to 1 if you have the <netdb.h> header file. */
#cmakedefine HAVE_NETDB_H 1

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H 1

/* Define to 1 if you have the <stddef.h> header file. */
#cmakedefine HAVE_STDDEF_H 1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H 1

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H 1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define to 1 if you have the <syslog.h> header file. */
#cmakedefine HAVE_SYSLOG_H 1

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H 1

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define to 1 if you have the <wchar.h> header file. */
#cmakedefine HAVE_WCHAR_H 1

/* Define to 1 if you have the <dumbnet.h> header file. */
#cmakedefine HAVE_DUMBNET_H 1


/*  Available libraries */

/* hyperscan available */
#cmakedefine HAVE_HYPERSCAN 1

/* lzma available */
#cmakedefine HAVE_LZMA 1

/* rxp available */
#cmakedefine HAVE_RXP 1

/* safec available */
#cmakedefine HAVE_SAFEC 1
#cmakedefine ENABLE_SAFEC 1


/* Library specific functions */

/* Can output the library version. */
#cmakedefine HAVE_PCAP_LIB_VERSION 1


/* Available compiler options */

/* Define if the compiler supports visibility declarations. */
#cmakedefine HAVE_VISIBILITY 1

/* Define if `thread_local` keyword should be used */
#cmakedefine USE_THREAD_LOCAL 1

#endif

